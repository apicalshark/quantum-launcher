name: CI

on:
  workflow_dispatch: # allows manual triggering
        inputs:
            create_release:
                description: "Create new release"
                required: true
                type: boolean
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
    cancel-in-progress: true

# Fine-grant permission
# https://docs.github.com/en/actions/security-for-github-actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
permissions:
  contents: write # for creating release
    
env:
  CARGO_TERM_COLOR: always
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
        - name: Clone
          id: checkout
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
    
        - name: Dependency
          uses: dtolnay/rust-toolchain@nightly
          
        - name: Build
          run: cargo build --verbose --release
      
    #    - name: Run tests
    #      run: cargo test --verbose
        
        - name: Determine tag name
          id: tag
          shell: bash
          run: |
            BUILD_NUMBER="$(git rev-list --count HEAD)"
            SHORT_HASH="$(git rev-parse --short=7 HEAD)"
            if [[ "${{ env.BRANCH_NAME }}" == "master" ]]; then
                echo "name=b${BUILD_NUMBER}" >> $GITHUB_OUTPUT
            else
                SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
                echo "name=${SAFE_NAME}-b${BUILD_NUMBER}" >> $GITHUB_OUTPUT
            fi

        - name: Pack artifacts
          if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.event.inputs.create_release == 'true' }}
          run: |
              zip -r quantum-launcher-${{ steps.tag.outputs.name }}-bin-ubuntu-x64.zip ./target/release/quantum_launcher LICENSE
            
        - name: 'Upload Artifact'
          uses: actions/upload-artifact@v4
          with:
            name: quantum-launcher-${{ steps.tag.outputs.name }}-bin-ubuntu-x64.zip
            path: quantum-launcher-${{ steps.tag.outputs.name }}-bin-ubuntu-x64.zip
