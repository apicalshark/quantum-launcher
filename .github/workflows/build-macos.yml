name: Build-macOS

on:
  workflow_dispatch: # allows manual triggering

env:
  BIN_NAME: quantum_launcher
  PROJECT_NAME: quantum_launcher
  REPO_NAME: Mrmayman/quantum-launcher
  FINAL_NAME: quantum_launcher
  CARGO_TERM_COLOR: always # Tell cargo to always use colors
  MACOSX_DEPLOYMENT_TARGET: 10.15

jobs:
  dist:
    name: Dist
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        build: [x86_64-macos, aarch64-macos]
        include:
          - build: x86_64-macos
            os: macos-latest
            rust: stable
            target: x86_64-apple-darwin
            cross: false
            final_name: macos_x86_64
          - build: aarch64-macos
            os: macos-latest
            rust: stable
            target: aarch64-apple-darwin
            cross: false
            final_name: macos_aarch64

    steps:
      - name: Checkout sources
        uses: actions/checkout@v5
        with:
          submodules: true

      - name: Install ${{ matrix.rust }} toolchain
        shell: bash
        run: |
          rustup toolchain install ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
          rustup target add ${{ matrix.target }}
          if [ "${{ matrix.cross }}" == "true" ]; then
            cargo install cross --locked
          fi

      - name: Build release binary
        shell: bash
        run: |
          if [ "${{ matrix.cross }}" == "true" ]; then
            cross build --profile release-ql --target ${{ matrix.target }}
          else
            cargo build --profile release-ql --target ${{ matrix.target }}
          fi

      - name: Create DMG
        shell: bash
        run: |
          mkdir dist
          APP_DIR="build/quantum-launcher.app"
          MACOS_DIR="$APP_DIR/Contents/MacOS"
          RESOURCES_DIR="$APP_DIR/Contents/Resources"
          mkdir -p "$MACOS_DIR" "$RESOURCES_DIR"
          cp "target/${{ matrix.target }}/release-ql/$BIN_NAME" "$MACOS_DIR/$BIN_NAME"
          cp assets/freedesktop/Info.plist "$APP_DIR/Contents/Info.plist"
          sips -s format icns "assets/icon/ql_logo.png" --out "$RESOURCES_DIR/ql_logo.icns"
          hdiutil create -volname "${{ env.BIN_NAME}}" -srcfolder "$APP_DIR" -ov -format UDZO "dist/${{ env.BIN_NAME }}.dmg"

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.FINAL_NAME}}_${{ matrix.final_name }}
          path: dist
